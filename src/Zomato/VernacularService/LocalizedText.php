<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/vernacular.proto

namespace Zomato\VernacularService;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * LocalizedText is an object containing localized data
 *
 * Generated from protobuf message <code>zomato.vernacular.LocalizedText</code>
 */
class LocalizedText extends \Google\Protobuf\Internal\Message
{
    /**
     * text is an localized string
     *
     * Generated from protobuf field <code>string text = 1;</code>
     */
    private $text = '';
    /**
     * is_default is a boolean flag denoting if the key was present in the database
     *
     * Generated from protobuf field <code>bool is_default = 2;</code>
     */
    private $is_default = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $text
     *           text is an localized string
     *     @type bool $is_default
     *           is_default is a boolean flag denoting if the key was present in the database
     * }
     */
    public function __construct($data = NULL) {
        \Zomato\VernacularService\Metadata\Vernacular::initOnce();
        parent::__construct($data);
    }

    /**
     * text is an localized string
     *
     * Generated from protobuf field <code>string text = 1;</code>
     * @return string
     */
    public function getText()
    {
        return $this->text;
    }

    /**
     * text is an localized string
     *
     * Generated from protobuf field <code>string text = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setText($var)
    {
        GPBUtil::checkString($var, True);
        $this->text = $var;

        return $this;
    }

    /**
     * is_default is a boolean flag denoting if the key was present in the database
     *
     * Generated from protobuf field <code>bool is_default = 2;</code>
     * @return bool
     */
    public function getIsDefault()
    {
        return $this->is_default;
    }

    /**
     * is_default is a boolean flag denoting if the key was present in the database
     *
     * Generated from protobuf field <code>bool is_default = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsDefault($var)
    {
        GPBUtil::checkBool($var);
        $this->is_default = $var;

        return $this;
    }

}

